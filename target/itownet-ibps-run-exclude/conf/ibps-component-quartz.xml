<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName" default-lazy-init="false">
	
    <!-- <context:component-scan base-package="com.lc.ibps.components.quartz.job">
		<context:include-filter type="annotation" expression="org.springframework.transaction.annotation.Transactional" />
	</context:component-scan> -->
	<!-- QUARTZ 2.0配置的问题 -->
	<!-- 
	<bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="true" destroy-method="destroy">
		<property name="autoStartup" value="${quartz.auto.startup}" />
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="dataSource" ref="dataSource" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="startupDelay" value="60"></property>
		<property name="jobFactory">
			<bean class="org.quartz.simpl.SimpleJobFactory"></bean>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">ClusteredScheduler</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>

				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>

				<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">${quartz.jdbcjobstore}</prop>
				<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
				<prop key="org.quartz.jobStore.useProperties">false</prop>
				<prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>

				<prop key="org.quartz.jobStore.isClustered">true</prop>
				<prop key="org.quartz.jobStore.clusterCheckinInterval">20000</prop>

				<prop key="org.quartz.scheduler.classLoadHelper.class">org.quartz.simpl.CascadingClassLoadHelper</prop>
				<prop key="org.quartz.jobStore.lockHandler.class">org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore
				</prop>
				<prop key="org.quartz.jobStore.lockHandler.updateLockRowSQL">UPDATE QRTZ_LOCKS SET LOCK_NAME = LOCK_NAME WHERE LOCK_NAME = ?</prop>
			</props>
		</property>
	</bean>
	 -->
	
	<!-- 新代码 -->
	<!-- 
	<bean id="schedulerServiceImpl" class="com.lc.ibps.components.quartz.service.impl.SchedulerServiceImpl"></bean>
	<bean id="triggerQueryService" class="com.lc.ibps.components.quartz.service.impl.TriggerQueryServiceImpl">
		<property name="scheduler" ref="scheduler"/>
	</bean>
	<bean id="triggerService" class="com.lc.ibps.components.quartz.service.impl.TriggerServiceImpl">
		<property name="scheduler" ref="scheduler"/>
		<property name="triggerQueryService" ref="triggerQueryService"/>
	</bean>
	<bean id="jobDetailQueryService" class="com.lc.ibps.components.quartz.service.impl.JobDetailQueryServiceImpl">
		<property name="scheduler" ref="scheduler"/>
	</bean>
	<bean id="jobDetailService" class="com.lc.ibps.components.quartz.service.impl.JobDetailServiceImpl">
		<property name="scheduler" ref="scheduler"/>
		<property name="jobDetailQueryService" ref="jobDetailQueryService"/>
		<property name="triggerQueryService" ref="triggerQueryService"/>
		<property name="triggerService" ref="triggerService"/>
	</bean>
	 -->
	
</beans>